/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database_test.to_keep;

import database_test.to_keep.database_manager.database_manager;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import javax.swing.tree.TreeSelectionModel;
import static org.eclipse.persistence.expressions.ExpressionOperator.substring;

/**
 *
 * @author USER
 */
public class database_UI extends javax.swing.JFrame {

    /**
     * Creates new form database_UI
     */
    
    private String persistence_unit = "database_testPU";
    private database_manager dao = new database_manager() ;
    private UI_Handler UI_H = new UI_Handler();
    private Settings UI_SETT = new Settings();
    
    
    public database_UI() {
        initComponents();
        this.database_tree.setModel( new DefaultTreeModel( new DefaultMutableTreeNode("Databases") ) );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        query_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        database_tree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        data_table = new javax.swing.JTable();
        notificacao = new javax.swing.JLabel();
        update_tree = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        query_area = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        query_button.setText("QUERY");
        query_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                query_buttonMouseClicked(evt);
            }
        });

        database_tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                database_treeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(database_tree);

        data_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(data_table);

        update_tree.setText("Update Tree");
        update_tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                update_treeMouseClicked(evt);
            }
        });

        query_area.setColumns(20);
        query_area.setRows(5);
        jScrollPane3.setViewportView(query_area);

        jButton1.setText("Settings");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(update_tree, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notificacao, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(query_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(query_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(update_tree)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notificacao)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void database_treeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_database_treeValueChanged
        
        this.update_dao_params();
        
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) this.database_tree.getLastSelectedPathComponent();
        if( node == null ) return;  ///Just in case
        
        UI_H.update_JTable( node , this.data_table , this.dao );
        
    }//GEN-LAST:event_database_treeValueChanged

    private void query_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_query_buttonMouseClicked
        
        this.update_dao_params();
        
        String recieved_query = this.query_area.getText();
                
        if( dao.ping_server().isEmpty() ){ ///If connection to server is estabilished
            
            String callback = dao.update_database(recieved_query);
            
            if( callback.isEmpty() ){
                this.notificacao.setForeground(Color.green);
                this.notificacao.setText("Database Updated");
            }else{
                
                try{
                    int index1 = 0;
                    int index2 = 0;

                    index1 = callback.indexOf("'");
                    index2 = callback.lastIndexOf("'");
                    
                    if( index1 != -1 || index2 != -1 ){
                        String notify = "Check Syntax " + callback.substring(index1, index2);

                        this.notificacao.setForeground(Color.red);
                        this.notificacao.setText(notify);
                    }
                    
                }catch( Exception ex ){
                    throw ex;
                }
                
            }
            
        }
        
    }//GEN-LAST:event_query_buttonMouseClicked

    private void update_treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_treeMouseClicked
        this.update_dao_params();
        UI_H.tree_update(database_tree, dao);
    }//GEN-LAST:event_update_treeMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        this.UI_SETT.setVisible(true);
        
        this.update_dao_params();
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void update_dao_params(){
        
        this.dao.setIP( this.UI_SETT.IP_field.getText() );
        this.dao.setPORT( this.UI_SETT.PORT_field.getText() );
        this.dao.setPassword( this.UI_SETT.password_field.getText() );
        this.dao.setPersistence_unit( this.persistence_unit );
        this.dao.setUsername( this.UI_SETT.user_field.getText() );
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(database_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(database_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(database_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(database_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new database_UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable data_table;
    private javax.swing.JTree database_tree;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel notificacao;
    private javax.swing.JTextArea query_area;
    private javax.swing.JButton query_button;
    private javax.swing.JButton update_tree;
    // End of variables declaration//GEN-END:variables
}
